#Connections report queries
#20-1-2016

#Overall connections:

Connections_best_overall_connection_locations= \
SELECT to_json(best_overall_connection_locations) as best_overall_connection_locations \
FROM \
(SELECT latitude, longitude \
FROM ( \
SELECT  DISTINCT latitude, longitude, count(*) \
FROM car_position_data cpd INNER JOIN \
(SELECT DISTINCT event_date, unit_id FROM overall_connections WHERE connected != false) oc \
ON cpd.event_date = oc.event_date AND cpd.unit_id = oc.unit_id \
GROUP BY latitude, longitude \
ORDER BY count(*) desc \
LIMIT 10) best_overall_connection_locations_table) as best_overall_connection_locations 

Connections_worst_overall_connection_locations= \
SELECT to_json(worst_overall_connection_locations)as worst_overall_connection_locations \
FROM  \
(SELECT latitude, longitude \
FROM ( \
SELECT  DISTINCT latitude, longitude, count(*) \
FROM car_position_data cpd INNER JOIN \
(SELECT DISTINCT event_date, unit_id FROM overall_connections WHERE connected != false) oc \
ON cpd.event_date = oc.event_date AND cpd.unit_id = oc.unit_id \
GROUP BY latitude, longitude \
ORDER BY count(*) asc \
LIMIT 10 ) worst_overall_connection_locations_table ) as worst_overall_connection_locations 

#hsdpa connections:

Connections_best_hspda_connection_locations=SELECT to_json(best_hspda_connection_locations)as best_hspda_connection_locations \
FROM \
(SELECT latitude, longitude FROM  ( \
SELECT DISTINCT latitude, longitude, COUNT(*) \
FROM car_position_data cpd INNER JOIN \
	(SELECT date_time_start_minute, unit_id \
	FROM hsdpa_connections \
	WHERE squal IS NOT null \
	AND rssi IS NOT null AND rscp IS NOT null \
	AND srxlev IS NOT null \
	AND number_of_connections IS NOT null \
	ORDER BY number_of_connections desc LIMIT 10) hc \
	ON \
	to_char(cpd.event_date::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00') \
	= \
	to_char(hc.date_time_start_minute ::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00') \
	AND cpd.unit_id = hc.unit_id \
	GROUP BY latitude, longitude \
	ORDER BY COUNT(*) DESC \
	LIMIT 10) best_hspda_connection_locations_table) as best_hspda_connection_locations 


Connections_worst_hspda_connection_locations=SELECT to_json(worst_hspda_connection_locations)as worst_hspda_connection_locations \
FROM \
(SELECT latitude, longitude FROM  ( \
SELECT DISTINCT latitude, longitude, COUNT(*) \
FROM car_position_data cpd INNER JOIN \
	(SELECT date_time_start_minute, unit_id \
	FROM hsdpa_connections \
	WHERE squal IS NOT null \
	AND rssi IS NOT null AND rscp IS NOT null \
	AND srxlev IS NOT null \
	AND number_of_connections IS NOT null \
	ORDER BY number_of_connections asc LIMIT 10) hc \
	ON \
	to_char(cpd.event_date::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00') \
	= \
	to_char(hc.date_time_start_minute ::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00') \
	AND cpd.unit_id = hc.unit_id \
	GROUP BY latitude, longitude \
	ORDER BY COUNT(*) DESC \
	LIMIT 10) worst_hspda_connection_locations_table) as worst_hspda_connection_locations

#tpc connections:

Connections_best_tcp_connections=SELECT to_json(best_tcp_connections)as best_tcp_connections \
FROM \
(SELECT latitude, longitude FROM  ( \
SELECT DISTINCT latitude, longitude, COUNT(*) \
FROM car_position_data cpd INNER JOIN  \
	(SELECT date_time_start_minute, unit_id, round_trip_latency \
	FROM tcp_client_connections \
	WHERE outstanding_sends = 0  \
	AND round_trip_latency IS NOT null \
	ORDER BY round_trip_latency asc  \
	LIMIT 10) tcc \
	ON  \
	to_char(cpd.event_date::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00')  \
	=  \
	to_char(tcc.date_time_start_minute ::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00') \
	AND cpd.unit_id = tcc.unit_id \
	GROUP BY latitude, longitude \
	ORDER BY COUNT(*) DESC \
	LIMIT 10) best_tcp_connections_table ) as best_tcp_connections
	

Connections_worst_tcp_connections=SELECT to_json(worst_tcp_connections)as worst_tcp_connections \
FROM  \
(SELECT latitude, longitude FROM  (  \
SELECT DISTINCT latitude, longitude, COUNT(*)  \
FROM car_position_data cpd INNER JOIN   \
	(SELECT date_time_start_minute, unit_id, round_trip_latency  \
	FROM tcp_client_connections  \
	WHERE outstanding_sends >= 0  \
	AND round_trip_latency IS NOT null  \
	ORDER BY round_trip_latency desc  \
	LIMIT 10) tcc \
	ON  \
	to_char(cpd.event_date::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00')  \
	=  \
	to_char(tcc.date_time_start_minute ::timestamp without time zone, 'YYYY-MM-DD HH24:MI:00') \
	AND cpd.unit_id = tcc.unit_id \
	GROUP BY latitude, longitude \
	ORDER BY COUNT(*) DESC \
	LIMIT 10) worst_tcp_connections_table) as worst_tcp_connections


